{"id":"894286d9b7c86c8e14831bde28e5756c","name":"🟢 Fetch single user by valid ID - Should return 200","start":1752035469003,"stop":1752035470075,"duration":1072,"status":"passed","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser","historyId":"26c43e7e3294e9ba17df887f1e5c4b35.d41d8cd98f00b204e9800998ecf8427e","flaky":false,"muted":false,"known":false,"hidden":false,"labels":[{"name":"package","value":"com.api.tests.GetUserTests"},{"name":"testClass","value":"com.api.tests.GetUserTests"},{"name":"testMethod","value":"testGetSingleUser_ValidId_ShouldReturnUser"},{"name":"parentSuite","value":"API Automation Test Suite"},{"name":"suite","value":"🔍 All CRUD API Tests (Create + Get + Update + Delete)"},{"name":"subSuite","value":"com.api.tests.GetUserTests"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2167@pkrvmfkh1xnbeme.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"✅ Get User by Valid ID"},{"name":"feature","value":"🔍 Get User API"},{"name":"epic","value":"👤 User Module"},{"name":"owner","value":"Satish Raja"},{"name":"severity","value":"critical"}],"groupedLabels":{"package":["com.api.tests.GetUserTests"],"testClass":["com.api.tests.GetUserTests"],"testMethod":["testGetSingleUser_ValidId_ShouldReturnUser"],"parentSuite":["API Automation Test Suite"],"suite":["🔍 All CRUD API Tests (Create + Get + Update + Delete)"],"subSuite":["com.api.tests.GetUserTests"],"host":["pkrvmfkh1xnbeme"],"thread":["2167@pkrvmfkh1xnbeme.main(1)"],"framework":["testng"],"language":["java"],"story":["✅ Get User by Valid ID"],"feature":["🔍 Get User API"],"epic":["👤 User Module"],"owner":["Satish Raja"],"severity":["critical"]},"parameters":[],"links":[{"name":"API Docs","url":"https://gorest.co.in/","type":"custom"}],"steps":[{"stepId":"a35676614f700376d4746de85cbe10f3","name":"📥 Fetching user with valid ID: 7993629","status":"passed","steps":[],"parameters":[],"start":1752035469003,"stop":1752035469003,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"ce3573643d4c6f6869da394ecfc89031","name":"⏱ Response Time: 769 ms","status":"passed","steps":[],"parameters":[],"start":1752035469782,"stop":1752035469782,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"id":"9c311bca1c089149ba70417123dfa45d","originalFileName":"afa78b42-c75a-446c-ac98-3028a993f6b2-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":358},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"8c11d745b40ad1e8fb8629b91a33bdb6","originalFileName":"e4e6d18e-679b-466c-8b9e-eb46d94e6038-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":1275,"name":"📬 Response"},"type":"attachment"},{"link":{"id":"c5ff2a52f7d79774ad48148545c3ced8","originalFileName":"7fff96c5-becb-4ad3-99e3-9d6499b4ab8c-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":142},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"a055b0bf565104d177ab4b694f6648e7","originalFileName":"a56d5d24-cbfb-467b-b533-11ec02c5642e-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":26,"name":"✅ Test Passed"},"type":"attachment"}],"error":{},"testCase":{"id":"26c43e7e3294e9ba17df887f1e5c4b35","name":"🟢 Fetch single user by valid ID - Should return 200","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser"},"environment":"default","setup":[{"id":"0665ae7a0219eef0b153255d828cb766","type":"before","name":"setup","status":"passed","steps":[{"stepId":"622552ada7c44946959c9f584fefe6b4","name":"⏱ Response Time: 819 ms","status":"passed","steps":[],"parameters":[],"start":1752035467252,"stop":1752035467252,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"c89b8d34b75ab3ea729e3f7ae522c6f2","name":"📌 Stored valid user ID for test: 7993629","status":"passed","steps":[],"parameters":[],"start":1752035467253,"stop":1752035467253,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"id":"47ad5bd12d682efde3b390fe4efc9dc3","originalFileName":"8cc86ef8-34eb-4e64-bfe2-b565817b47d6-attachment.json","ext":".json","name":"📎 Create User Payload","contentType":"application/json","used":true,"missed":false,"contentLength":98},"type":"attachment"},{"link":{"id":"be7debb29b2f6ca087832fc28cd6aedc","originalFileName":"86db6b48-8bc2-4568-9c9c-1e21018d6501-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":351},"type":"attachment"},{"link":{"id":"570773b8c7d6d9f331d2306933fee34f","originalFileName":"b4f3bb11-f9e7-4a53-b03b-a8feb1a2ed16-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1298},"type":"attachment"},{"link":{"id":"87b878539422c42cf55203edab77c25e","originalFileName":"d60b5acf-7b50-4e4f-b70e-b61b04dd1eb3-attachment.json","ext":".json","name":"📎 Create User Response","contentType":"application/json","used":true,"missed":false,"contentLength":142},"type":"attachment"}],"duration":856},{"id":"b37a0e6c0d2bd819b33959589ab6c3b0","type":"before","name":"logTestStart","status":"passed","steps":[{"stepId":"ac4cc3aa79ad126097b7e4f3ddfbc3ef","name":"🚀 STARTING TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752035469001,"stop":1752035469001,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"teardown":[{"id":"97b73e0d9c55ef6ee09cb8e8c8bfb2e4","type":"after","name":"logTestResult","status":"passed","steps":[{"stepId":"009b79a9a148224728c3c430f2e68d8f","name":"✅ PASSED TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752035470076,"stop":1752035470076,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"history":[],"retries":[],"breadcrumbs":[["API Automation Test Suite","🔍 All CRUD API Tests (Create + Get + Update + Delete)","com.api.tests.GetUserTests"]],"retry":false,"attachments":[{"link":{"id":"9c311bca1c089149ba70417123dfa45d","originalFileName":"afa78b42-c75a-446c-ac98-3028a993f6b2-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":358},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"8c11d745b40ad1e8fb8629b91a33bdb6","originalFileName":"e4e6d18e-679b-466c-8b9e-eb46d94e6038-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":1275,"name":"📬 Response"},"type":"attachment"},{"link":{"id":"c5ff2a52f7d79774ad48148545c3ced8","originalFileName":"7fff96c5-becb-4ad3-99e3-9d6499b4ab8c-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":142},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"a055b0bf565104d177ab4b694f6648e7","originalFileName":"a56d5d24-cbfb-467b-b533-11ec02c5642e-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":26,"name":"✅ Test Passed"},"type":"attachment"}],"order":9}