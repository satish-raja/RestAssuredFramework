{"id":"b2ac5d9f706cc3a9f86d59e51d1af529","name":"🟢 Fetch single user by valid ID - Should return 200","start":1752063645547,"stop":1752063646758,"duration":1211,"status":"passed","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser","historyId":"26c43e7e3294e9ba17df887f1e5c4b35.d41d8cd98f00b204e9800998ecf8427e","flaky":false,"muted":false,"known":false,"hidden":false,"labels":[{"name":"package","value":"com.api.tests.GetUserTests"},{"name":"testClass","value":"com.api.tests.GetUserTests"},{"name":"testMethod","value":"testGetSingleUser_ValidId_ShouldReturnUser"},{"name":"parentSuite","value":"API Automation Test Suite"},{"name":"suite","value":"🔍 All CRUD API Tests (Create + Get + Update + Delete)"},{"name":"subSuite","value":"com.api.tests.GetUserTests"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2185@pkrvmfkh1xnbeme.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"✅ Get User by Valid ID"},{"name":"feature","value":"🔍 Get User API"},{"name":"epic","value":"👤 User Module"},{"name":"owner","value":"Satish Raja"},{"name":"severity","value":"critical"}],"groupedLabels":{"package":["com.api.tests.GetUserTests"],"testClass":["com.api.tests.GetUserTests"],"testMethod":["testGetSingleUser_ValidId_ShouldReturnUser"],"parentSuite":["API Automation Test Suite"],"suite":["🔍 All CRUD API Tests (Create + Get + Update + Delete)"],"subSuite":["com.api.tests.GetUserTests"],"host":["pkrvmfkh1xnbeme"],"thread":["2185@pkrvmfkh1xnbeme.main(1)"],"framework":["testng"],"language":["java"],"story":["✅ Get User by Valid ID"],"feature":["🔍 Get User API"],"epic":["👤 User Module"],"owner":["Satish Raja"],"severity":["critical"]},"parameters":[],"links":[{"name":"API Docs","url":"https://gorest.co.in/","type":"custom"}],"steps":[{"stepId":"328201eaceb1ba556a9026704bd5ee72","name":"📥 Fetching user with valid ID: 7994708","status":"passed","steps":[],"parameters":[],"start":1752063645547,"stop":1752063645547,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"8b57dbc1dd478a8064de8ab4bd32ab16","name":"⏱ Response Time: 923 ms","status":"passed","steps":[],"parameters":[],"start":1752063646478,"stop":1752063646478,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"id":"017e154f5fb3c66446970d0bf7f26531","originalFileName":"49d17993-d095-40ba-a769-40d70b6eec20-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":354},"type":"attachment"},{"link":{"id":"40498f53677d4d75e1f58eb53988b33c","originalFileName":"485c805c-7228-47e9-9630-9c6d392958d3-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1275},"type":"attachment"},{"link":{"id":"5601723f42de9c11967d674e5e0a6bab","originalFileName":"0b9eb558-5d3a-45ee-9b3c-68af3f948509-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":138},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"e092e387cc26b4d2e7428a5d7b920506","originalFileName":"53b14910-5f2f-4226-82cb-03d48bfbf812-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":26,"name":"✅ Test Passed"},"type":"attachment"}],"error":{},"testCase":{"id":"26c43e7e3294e9ba17df887f1e5c4b35","name":"🟢 Fetch single user by valid ID - Should return 200","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser"},"environment":"default","setup":[{"id":"53ae06e990006c1495ee49093f44fd8b","type":"before","name":"setup","status":"passed","steps":[{"stepId":"50db1629a84a0839f91c7463a0db2f7f","name":"⏱ Response Time: 946 ms","status":"passed","steps":[],"parameters":[],"start":1752063643472,"stop":1752063643472,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"40ce04aec37174d77b5f346b01799dde","name":"📌 Stored valid user ID for test: 7994708","status":"passed","steps":[],"parameters":[],"start":1752063643475,"stop":1752063643475,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"id":"26348f049ede3b20092c2bbcec81278c","originalFileName":"0c33d3d2-992f-4bc8-8fec-7b3e14e47537-attachment.json","ext":".json","name":"📎 Create User Payload","contentType":"application/json","used":true,"missed":false,"contentLength":94},"type":"attachment"},{"link":{"id":"e4d28e9eef27eb9217b1d24141dd2eef","originalFileName":"dc37ee24-4d78-47bb-bc05-1709dfef995f-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":347},"type":"attachment"},{"link":{"id":"397abe6832fd1418242520e56d4bc3b1","originalFileName":"d9bac734-2322-4774-9013-cb87291bb972-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1294},"type":"attachment"},{"link":{"id":"d02d2a275f8fd9a27b89e562136c6fb6","originalFileName":"5bbd3ffc-f32c-491e-9ad9-7e040775e7f1-attachment.json","ext":".json","name":"📎 Create User Response","contentType":"application/json","used":true,"missed":false,"contentLength":138},"type":"attachment"}],"duration":985},{"id":"8917aaae7ba75059988229408c65a4a1","type":"before","name":"logTestStart","status":"passed","steps":[{"stepId":"3eee99a4a16b5630702115420b5464c1","name":"🚀 STARTING TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752063645544,"stop":1752063645544,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"teardown":[{"id":"215cd9702e534d3bb547155894ca3b9c","type":"after","name":"logTestResult","status":"passed","steps":[{"stepId":"932790ee629fde984d28557236661289","name":"✅ PASSED TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752063646759,"stop":1752063646759,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"history":[],"retries":[],"breadcrumbs":[["API Automation Test Suite","🔍 All CRUD API Tests (Create + Get + Update + Delete)","com.api.tests.GetUserTests"]],"retry":false,"attachments":[{"link":{"id":"017e154f5fb3c66446970d0bf7f26531","originalFileName":"49d17993-d095-40ba-a769-40d70b6eec20-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":354},"type":"attachment"},{"link":{"id":"40498f53677d4d75e1f58eb53988b33c","originalFileName":"485c805c-7228-47e9-9630-9c6d392958d3-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1275},"type":"attachment"},{"link":{"id":"5601723f42de9c11967d674e5e0a6bab","originalFileName":"0b9eb558-5d3a-45ee-9b3c-68af3f948509-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":138},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"e092e387cc26b4d2e7428a5d7b920506","originalFileName":"53b14910-5f2f-4226-82cb-03d48bfbf812-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":26,"name":"✅ Test Passed"},"type":"attachment"}],"order":9}