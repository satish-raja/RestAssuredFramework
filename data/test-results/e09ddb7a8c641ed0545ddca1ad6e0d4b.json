{"id":"e09ddb7a8c641ed0545ddca1ad6e0d4b","name":"🟢 Fetch single user by valid ID - Should return 200","start":1752058196672,"stop":1752058197314,"duration":642,"status":"passed","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser","historyId":"26c43e7e3294e9ba17df887f1e5c4b35.d41d8cd98f00b204e9800998ecf8427e","flaky":false,"muted":false,"known":false,"hidden":false,"labels":[{"name":"package","value":"com.api.tests.GetUserTests"},{"name":"testClass","value":"com.api.tests.GetUserTests"},{"name":"testMethod","value":"testGetSingleUser_ValidId_ShouldReturnUser"},{"name":"parentSuite","value":"API Automation Test Suite"},{"name":"suite","value":"🔍 All CRUD API Tests (Create + Get + Update + Delete)"},{"name":"subSuite","value":"com.api.tests.GetUserTests"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2285@pkrvmfkh1xnbeme.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"✅ Get User by Valid ID"},{"name":"feature","value":"🔍 Get User API"},{"name":"epic","value":"👤 User Module"},{"name":"owner","value":"Satish Raja"},{"name":"severity","value":"critical"}],"groupedLabels":{"package":["com.api.tests.GetUserTests"],"testClass":["com.api.tests.GetUserTests"],"testMethod":["testGetSingleUser_ValidId_ShouldReturnUser"],"parentSuite":["API Automation Test Suite"],"suite":["🔍 All CRUD API Tests (Create + Get + Update + Delete)"],"subSuite":["com.api.tests.GetUserTests"],"host":["pkrvmfkh1xnbeme"],"thread":["2285@pkrvmfkh1xnbeme.main(1)"],"framework":["testng"],"language":["java"],"story":["✅ Get User by Valid ID"],"feature":["🔍 Get User API"],"epic":["👤 User Module"],"owner":["Satish Raja"],"severity":["critical"]},"parameters":[],"links":[{"name":"API Docs","url":"https://gorest.co.in/","type":"custom"}],"steps":[{"stepId":"2ead27acdd3daeacc8bed0b50b36b21e","name":"📥 Fetching user with valid ID: 7994495","status":"passed","steps":[],"parameters":[],"start":1752058196673,"stop":1752058196673,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"b778fee5f874c17fff570d913fb97103","name":"⏱ Response Time: 368 ms","status":"passed","steps":[],"parameters":[],"start":1752058197049,"stop":1752058197049,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"id":"4e8fdc6e68f27597495814d974f04b41","originalFileName":"60766116-8521-4e5d-8469-3362d38d1d68-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":356},"type":"attachment"},{"link":{"id":"70b22c53565d80507a9ffe6b92fd087e","originalFileName":"27b85050-32a1-4d0d-8372-3a4b79b1ab9a-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1277},"type":"attachment"},{"link":{"id":"17237f1ad2e50d3ad2d054706da36d3a","originalFileName":"c16542a5-02b8-4418-9191-112ab1870471-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":140},"type":"attachment"},{"link":{"id":"5cc6d3300f1582a36b9e00b2943c4397","originalFileName":"5c7f64b6-8d72-42d4-87f7-9244bd9e65f8-attachment.txt","ext":".txt","name":"✅ Test Passed","contentType":"text/plain","used":true,"missed":false,"contentLength":26},"type":"attachment"}],"error":{},"testCase":{"id":"26c43e7e3294e9ba17df887f1e5c4b35","name":"🟢 Fetch single user by valid ID - Should return 200","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser"},"environment":"default","setup":[{"id":"56af47f1db2bbaa44e13a9f06e3a4213","type":"before","name":"setup","status":"passed","steps":[{"stepId":"c4dc6274a1704100f0cea058413677b0","name":"⏱ Response Time: 403 ms","status":"passed","steps":[],"parameters":[],"start":1752058195227,"stop":1752058195227,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"abd5ee5bab7b8bb829028650aabec1ee","name":"📌 Stored valid user ID for test: 7994495","status":"passed","steps":[],"parameters":[],"start":1752058195229,"stop":1752058195229,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"id":"dd89e19b127a5af5c350abace6832d50","originalFileName":"3135706f-df2f-48b1-b4dd-04ef7707ba56-attachment.json","ext":".json","name":"📎 Create User Payload","contentType":"application/json","used":true,"missed":false,"contentLength":96},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"d92135589a40059a556fcfad34a48576","originalFileName":"ac1c37d8-1fc0-40ea-9ce2-53d94a986e77-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":349,"name":"🔍 Request"},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"ba923d55a389cb774f311a9bb6660719","originalFileName":"63026eb3-1ec5-4721-883a-f599ca2d209f-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":1300,"name":"📬 Response"},"type":"attachment"},{"link":{"id":"8aa75fd3ffdc1267234fe17e6680fbc0","originalFileName":"f923e399-f7d4-4bb0-a044-7e9262d57953-attachment.json","ext":".json","name":"📎 Create User Response","contentType":"application/json","used":true,"missed":false,"contentLength":140},"type":"attachment"}],"duration":451},{"id":"12c1eab18cd26add1e4beebdd15d6363","type":"before","name":"logTestStart","status":"passed","steps":[{"stepId":"b26ada56ffd1e63f2d5cb2fa0cd28b65","name":"🚀 STARTING TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752058196670,"stop":1752058196670,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"teardown":[{"id":"a28ebedec6076f546f46b24788ee5f93","type":"after","name":"logTestResult","status":"passed","steps":[{"stepId":"364db6a197b5c80eb737d6b20eb51950","name":"✅ PASSED TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752058197316,"stop":1752058197316,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"history":[],"retries":[],"breadcrumbs":[["API Automation Test Suite","🔍 All CRUD API Tests (Create + Get + Update + Delete)","com.api.tests.GetUserTests"]],"retry":false,"attachments":[{"link":{"id":"4e8fdc6e68f27597495814d974f04b41","originalFileName":"60766116-8521-4e5d-8469-3362d38d1d68-attachment.txt","ext":".txt","name":"🔍 Request","contentType":"text/plain","used":true,"missed":false,"contentLength":356},"type":"attachment"},{"link":{"id":"70b22c53565d80507a9ffe6b92fd087e","originalFileName":"27b85050-32a1-4d0d-8372-3a4b79b1ab9a-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1277},"type":"attachment"},{"link":{"id":"17237f1ad2e50d3ad2d054706da36d3a","originalFileName":"c16542a5-02b8-4418-9191-112ab1870471-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":140},"type":"attachment"},{"link":{"id":"5cc6d3300f1582a36b9e00b2943c4397","originalFileName":"5c7f64b6-8d72-42d4-87f7-9244bd9e65f8-attachment.txt","ext":".txt","name":"✅ Test Passed","contentType":"text/plain","used":true,"missed":false,"contentLength":26},"type":"attachment"}],"order":9}