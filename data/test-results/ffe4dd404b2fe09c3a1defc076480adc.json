{"id":"ffe4dd404b2fe09c3a1defc076480adc","name":"🟢 Fetch single user by valid ID - Should return 200","start":1752063781371,"stop":1752063782044,"duration":673,"status":"passed","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser","historyId":"26c43e7e3294e9ba17df887f1e5c4b35.d41d8cd98f00b204e9800998ecf8427e","flaky":false,"muted":false,"known":false,"hidden":false,"labels":[{"name":"package","value":"com.api.tests.GetUserTests"},{"name":"testClass","value":"com.api.tests.GetUserTests"},{"name":"testMethod","value":"testGetSingleUser_ValidId_ShouldReturnUser"},{"name":"parentSuite","value":"API Automation Test Suite"},{"name":"suite","value":"🔍 All CRUD API Tests (Create + Get + Update + Delete)"},{"name":"subSuite","value":"com.api.tests.GetUserTests"},{"name":"host","value":"pkrvmfkh1xnbeme"},{"name":"thread","value":"2171@pkrvmfkh1xnbeme.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"✅ Get User by Valid ID"},{"name":"feature","value":"🔍 Get User API"},{"name":"epic","value":"👤 User Module"},{"name":"owner","value":"Satish Raja"},{"name":"severity","value":"critical"}],"groupedLabels":{"package":["com.api.tests.GetUserTests"],"testClass":["com.api.tests.GetUserTests"],"testMethod":["testGetSingleUser_ValidId_ShouldReturnUser"],"parentSuite":["API Automation Test Suite"],"suite":["🔍 All CRUD API Tests (Create + Get + Update + Delete)"],"subSuite":["com.api.tests.GetUserTests"],"host":["pkrvmfkh1xnbeme"],"thread":["2171@pkrvmfkh1xnbeme.main(1)"],"framework":["testng"],"language":["java"],"story":["✅ Get User by Valid ID"],"feature":["🔍 Get User API"],"epic":["👤 User Module"],"owner":["Satish Raja"],"severity":["critical"]},"parameters":[],"links":[{"name":"API Docs","url":"https://gorest.co.in/","type":"custom"}],"steps":[{"stepId":"1d6ee96b91cb9e51965937ec786bbd1f","name":"📥 Fetching user with valid ID: 7994726","status":"passed","steps":[],"parameters":[],"start":1752063781371,"stop":1752063781371,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"5e59b942e528c8e3f8a230589c8d05e4","name":"⏱ Response Time: 370 ms","status":"passed","steps":[],"parameters":[],"start":1752063781751,"stop":1752063781751,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"used":true,"missed":false,"id":"acfdca6280132121a38c739ea1e0730c","originalFileName":"fe439d8f-baf9-4db0-bfd2-62612929f6d6-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":353,"name":"🔍 Request"},"type":"attachment"},{"link":{"id":"a4a635c3ae946b60e4480b575792f11b","originalFileName":"1ab1a3b0-04dd-4efd-b649-a2ce8839c3f9-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1266},"type":"attachment"},{"link":{"id":"fc3ac9b8c38734601fb396ef642c12d8","originalFileName":"d9a92816-3c8d-4152-8151-2f2f58198989-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":137},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"396dcbddd8c893e7bbf2bc8fbdd565af","originalFileName":"32a934b7-ca5b-4d94-8f86-dba96ba82d4b-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":26,"name":"✅ Test Passed"},"type":"attachment"}],"error":{},"testCase":{"id":"26c43e7e3294e9ba17df887f1e5c4b35","name":"🟢 Fetch single user by valid ID - Should return 200","fullName":"com.api.tests.GetUserTests.testGetSingleUser_ValidId_ShouldReturnUser"},"environment":"default","setup":[{"id":"cbb4084dd4cbae3f4f18a595f2a69080","type":"before","name":"setup","status":"passed","steps":[{"stepId":"52810554a3192b1f4effd82dd17ebe06","name":"⏱ Response Time: 417 ms","status":"passed","steps":[],"parameters":[],"start":1752063779911,"stop":1752063779911,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"stepId":"8dfc64c73e344e6ee54868ec2e523d6a","name":"📌 Stored valid user ID for test: 7994726","status":"passed","steps":[],"parameters":[],"start":1752063779913,"stop":1752063779913,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false},{"link":{"used":true,"missed":false,"id":"c8e0e69ef6ea87c3065256df970044e1","originalFileName":"cc8c20d8-53b5-406a-a594-a6ee1bff00d0-attachment.json","ext":".json","contentType":"application/json","contentLength":93,"name":"📎 Create User Payload"},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"7b2cbddad5cd04301a8d8cd3394b4776","originalFileName":"24f311cc-3807-4a10-b102-34e3b453901d-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":346,"name":"🔍 Request"},"type":"attachment"},{"link":{"id":"5434e52537a03890cbde3d7e39801508","originalFileName":"abed75b0-6891-449c-b6fb-fc6fb70e0cd8-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1301},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"05520f2fafa2e7b3ec9d6e5f18a7f152","originalFileName":"8c7ced73-60d5-4ff6-99b8-5ee09db1dd75-attachment.json","ext":".json","contentType":"application/json","contentLength":137,"name":"📎 Create User Response"},"type":"attachment"}],"duration":467},{"id":"d874f933293c0b0c3c76cd16255249eb","type":"before","name":"logTestStart","status":"passed","steps":[{"stepId":"31a0f8d35900e32cd87dbdff22f2bc55","name":"🚀 STARTING TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752063781368,"stop":1752063781368,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"teardown":[{"id":"010a6b784e8d668c0383c27605afe805","type":"after","name":"logTestResult","status":"passed","steps":[{"stepId":"71f94a80d8a6adb75b1a7008105db16e","name":"✅ PASSED TEST: `testGetSingleUser_ValidId_ShouldReturnUser`","status":"passed","steps":[],"parameters":[],"start":1752063782046,"stop":1752063782046,"duration":0,"type":"step","hasSimilarErrorInSubSteps":false}],"duration":0}],"history":[],"retries":[],"breadcrumbs":[["API Automation Test Suite","🔍 All CRUD API Tests (Create + Get + Update + Delete)","com.api.tests.GetUserTests"]],"retry":false,"attachments":[{"link":{"used":true,"missed":false,"id":"acfdca6280132121a38c739ea1e0730c","originalFileName":"fe439d8f-baf9-4db0-bfd2-62612929f6d6-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":353,"name":"🔍 Request"},"type":"attachment"},{"link":{"id":"a4a635c3ae946b60e4480b575792f11b","originalFileName":"1ab1a3b0-04dd-4efd-b649-a2ce8839c3f9-attachment.txt","ext":".txt","name":"📬 Response","contentType":"text/plain","used":true,"missed":false,"contentLength":1266},"type":"attachment"},{"link":{"id":"fc3ac9b8c38734601fb396ef642c12d8","originalFileName":"d9a92816-3c8d-4152-8151-2f2f58198989-attachment.json","ext":".json","name":"📎 Get User By Valid ID Response","contentType":"application/json","used":true,"missed":false,"contentLength":137},"type":"attachment"},{"link":{"used":true,"missed":false,"id":"396dcbddd8c893e7bbf2bc8fbdd565af","originalFileName":"32a934b7-ca5b-4d94-8f86-dba96ba82d4b-attachment.txt","ext":".txt","contentType":"text/plain","contentLength":26,"name":"✅ Test Passed"},"type":"attachment"}],"order":9}